/**
 * 通过枚举类获取枚举对象			$.enums("Education")	
 * 通过枚举value获取label		$.enums("Education").getLabel(1)
 * 通过枚举label获取value		$.enums("Education").getValue("高中")
 * 通过枚举项名称获取枚举项		$.enums("Education").get("type0")
 * 获取枚举项的value				$.enums("Education").get("type0").key
 * 获取枚举项的label				$.enums("Education").get("type0").label
 */
var Enum=function(className){
	
	var apiurl="common/enums/getByClassName";
	var data={};	//缓存对象,存储格式{type0:{label:"男",value:0},type1:{label:"女",value:1}}
	
	var _this=this;
	$.ajax({ type : "get", url : getBasePath().replace("script/",apiurl), data : {className:className}, async : false, dataType : "json",
      	success : function(d){
      		if(d.data!=undefined && d.data!=null){
      			_this.data=d.data;
      		}else{
      			throw "initError";
      		}
      	}
    });
	
	function getBasePath() {
		var els = document.getElementsByTagName('script'), src;
		for (var i = 0, len = els.length; i < len; i++) {
			src = els[i].src || '';
			if (src.indexOf("jquery.enums.min.js")>0) {
				return src.substring(0, src.lastIndexOf('/') + 1);
			}
		}
		return '';
	}
}

Enum.prototype={
		
		//通过名称获取枚举对象
		get:function(name){
			var _that=this;
			var r={};
			$.each(_that.data,function(enumItemName,enumItem){
				if(enumItemName==name){
					r=enumItem;return;
				}
			});
			return r;
		},
		
		//通过label获取值
		getValue:function(label){
			var _that=this;
			
			var value='';
			$.each(_that.data,function(enumItemName,enumItem){
				if(enumItem.label==label){
					value=enumItem.value;return;
				}
			});
			return value;
		},
		
		//通过值获取label
		getLabel:function(value){
			var _that=this;
			
			var label='';
			$.each(_that.data,function(enumItemName,enumItem){
				if(enumItem.value==value){
					label=enumItem.label;return;
				}
			});
			return label;
		},
		getSelectItemList:function(){
			
		}
}

var smart = smart ? smart : {};
(function(sm, $) {
	sm.enums = {
			
		data:{},
		
		init:function(className){
			var _this=this;
			var e;
			$.each(_this.data,function(key,value){
				if(key==className){
					e=value;
				}
			});
			
			if(e==undefined){
				try{
					e=new Enum(className);
					_this.data[className]=e;
				}catch(error){
					console.log(className+":"+error);
				}
			}
			
			return e;
		}
	};
})(smart, jQuery);

jQuery(function($){
	$.enums= function(opt) {
		return smart.enums.init(opt);
	}
});